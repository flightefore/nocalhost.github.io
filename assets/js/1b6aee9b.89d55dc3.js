"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[7247],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8311:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],l={},c="Config Reference",p={unversionedId:"config/config-ref",id:"config/config-ref",isDocsHomePage:!1,title:"Config Reference",description:"For full detailed Nocalhost config specs, please refer to Nocalhost Config Specs",source:"@site/docs/config/config-ref.md",sourceDirName:"config",slug:"/config/config-ref",permalink:"/docs/config/config-ref",editUrl:"https://github.com/neaped/nh-docs/docs/config/config-ref.md",version:"current",lastUpdatedBy:"Garry",lastUpdatedAt:1628880717,formattedLastUpdatedAt:"8/13/2021",frontMatter:{},sidebar:"docs",previous:{title:"Clear PVC",permalink:"/docs/guides/clear-pvc"},next:{title:"Basic",permalink:"/docs/config/config-deploy"}},s=[{value:"Configuration Structure",id:"configuration-structure",children:[]},{value:"<code>configProperties</code>",id:"configproperties",children:[]},{value:"<code>application</code>",id:"application",children:[{value:"<code>application[*].onPreInstall</code>",id:"applicationonpreinstall",children:[]},{value:"<code>application[*].helmValues</code>",id:"applicationhelmvalues",children:[]},{value:"<code>application[*].env</code> and <code>application[*].envFrom</code>",id:"applicationenv-and-applicationenvfrom",children:[]},{value:"<code>application[*].services</code>",id:"applicationservices",children:[]}]}],u={toc:s};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"config-reference"},"Config Reference"),(0,o.kt)("p",null,"For full detailed Nocalhost config specs, please refer to ",(0,o.kt)("a",{parentName:"p",href:"../reference/nh-config"},"Nocalhost Config Specs")),(0,o.kt)("h2",{id:"configuration-structure"},"Configuration Structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"configProperties: ...           # struct    | required | Specify config properties\n\napplication: ...                # struct    | required | Specify application configuration\n")),(0,o.kt)("h2",{id:"configproperties"},(0,o.kt)("inlineCode",{parentName:"h2"},"configProperties")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"configProperties:               \n    version: v2                 # string    | required | config file version\n    envFile: null               # string    | optional | env file name, substitution variable for this file\n")),(0,o.kt)("h2",{id:"application"},(0,o.kt)("inlineCode",{parentName:"h2"},"application")),(0,o.kt)("p",null,"Nocalhost will use these configurations to manage an application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"application:                    \n    name: foo-app               # string    | required | Application name\n    manifestType: rawManifest   # string    | required | Application k8s manifest type\n    resourcePath: []            # string[]  | required | Set the application resource path\n    helmVersion: 0.0.1          # string    | optional | Set default application version for helmRepo\n    ignoredPath: []             # string[]  | optional | \n    onPreInstall: ...           # struct    | optional | The jobs to be executed before application's installation.\n    helmValues: ...             # struct    | optional | Overwrite Helm values.yaml\n    env: ...                    # struct    | optional | Inject environment variable for all workload when installed\n    envFrom: ...                # struct    | optional | Use envFile to inject environment variable for all workload when installed\n    services: ...               # struct    | optional | Applications' services configurations\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./config-deploy"},"Learn more about how to configure application deployment.")),(0,o.kt)("h3",{id:"applicationonpreinstall"},(0,o.kt)("inlineCode",{parentName:"h3"},"application[*].onPreInstall")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'onPreInstall:\n    - path: ""                  # string    | required | Job\'s yaml file, the relative path of the root directory\n      weight: 0                 # integer   | required | Order of execution of job, the smallest will be executed first\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./config-deploy#run-jobs-before-installing-the-application"},"Learn more about how to set up pre-install configurations ")),(0,o.kt)("h3",{id:"applicationhelmvalues"},(0,o.kt)("inlineCode",{parentName:"h3"},"application[*].helmValues")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'helmValues:\n    - kye: ""                   # string    | The Helm chart value key\n      value: ""                 # string    | The Helm chart values\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./config-deploy-helm#overwrite-helm-values"},"Learn more about how to overwrite Helm values")),(0,o.kt)("h3",{id:"applicationenv-and-applicationenvfrom"},(0,o.kt)("inlineCode",{parentName:"h3"},"application[*].env")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"application[*].envFrom")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"env: []\n\nenvFrom:\n    envFile: []                 # string[]  | optional | Use envFile to inject environment variable for all workload \n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./config-deploy#inject-environment-variable"},"Learn more about how to set up environment variables")),(0,o.kt)("h3",{id:"applicationservices"},(0,o.kt)("inlineCode",{parentName:"h3"},"application[*].services")),(0,o.kt)("p",null,"Nocalhost's services are completely different from Kubernetes Service. It provides enhanced capabilities for application deployment and development."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'services:\n    - name: ""                      # string    | required | Name of the service, also is the display name in cluster\n      serviceType: ""               # string    | required | The Kubernetes Workloads type corresponding to the service\n      dependLabelSelector: ...      # struct    | optional | Dependent Pods label selector \n      container: ...                # struct    | optional | \n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"dependLabelSelector")," - ",(0,o.kt)("a",{parentName:"li",href:"./config-deploy#manage-start-dependency"},"Learn more about how to configure to control workloads' startup sequence")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"container")," - ",(0,o.kt)("a",{parentName:"li",href:"./config-dev"},"Learn more about how to configure development mode"))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Not essential")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Service configurations are not essential, it will not affect the usage of Nocalhost without configurations. It's an enhancement that gives you a better deployment and development experience."))))}d.isMDXComponent=!0}}]);