"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[8087],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},4996:function(e,t,n){n.d(t,{C:function(){return o},Z:function(){return i}});var r=n(2263),a=n(3919);function o(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,o=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var o=void 0===r?{}:r,i=o.forcePrependBaseUrl,l=void 0!==i&&i,s=o.absolute,d=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(l)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return d?e+c:c}(o,n,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,o().withBaseUrl)(e,t)}},218:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=n(4996),l=["components"],s={title:"How DevMode Works?"},d="Development Mode",c={unversionedId:"guides/how-devmode-work",id:"guides/how-devmode-work",isDocsHomePage:!1,title:"How DevMode Works?",description:"Why?",source:"@site/docs/guides/how-devmode-work.md",sourceDirName:"guides",slug:"/guides/how-devmode-work",permalink:"/docs/guides/how-devmode-work",editUrl:"https://github.com/nocalhost/nocalhost.github.io/tree/main/docs/guides/how-devmode-work.md",version:"current",lastUpdatedBy:"Garry",lastUpdatedAt:1629102564,formattedLastUpdatedAt:"8/16/2021",frontMatter:{title:"How DevMode Works?"},sidebar:"docs",previous:{title:"Deploy Demo Application",permalink:"/docs/guides/deploy/deploy-demo"},next:{title:"Develop a Workload",permalink:"/docs/guides/develop-service"}},p=[{value:"Why?",id:"why",children:[]},{value:"Start Development Mode",id:"start-development-mode",children:[]},{value:"Development Process",id:"development-process",children:[{value:"1. Replace Image",id:"1-replace-image",children:[]},{value:"2. Replace Container and Restart POD",id:"2-replace-container-and-restart-pod",children:[]},{value:"3. Start Port-Forwarding",id:"3-start-port-forwarding",children:[]},{value:"4. Start File Synchronization",id:"4-start-file-synchronization",children:[]},{value:"5. Open Terminal and Stream Logs",id:"5-open-terminal-and-stream-logs",children:[]}]}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"development-mode"},"Development Mode"),(0,o.kt)("h2",{id:"why"},"Why?"),(0,o.kt)("p",null,"The advantages of using Nocalhost to develop directly inside Kubernetes are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Production environment similarity")," - Dev environment is very similar to your production environment, giving you much more confidence that everything will work in the production environment when new features are released."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Speed up feedback loop")," - Via file synchronization, your code changes can take effect immediately in the container without rebuilding the image or redeploying the container. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Flexible scalability")," - Developers do not need to worry about insufficient local resources."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Reduce Cost")," - Use resources more efficiently and reduce IT facility costs")),(0,o.kt)("p",null,"Develop in Kubernetes cluster can be useful in the following cases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Limitations of local resources"),(0,o.kt)("li",{parentName:"ul"},"Want to test your application in a production-like environment"),(0,o.kt)("li",{parentName:"ul"},"Want to debug issues that are hard to reproduce on your local machine"),(0,o.kt)("li",{parentName:"ul"},"Applications need to access cluster-internal services (e.g. Cluster DNS)")),(0,o.kt)("h2",{id:"start-development-mode"},"Start Development Mode"),(0,o.kt)("p",null,"Start the development mode in IDE:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open the cluster inspector in Nocalhost plugin"),(0,o.kt)("li",{parentName:"ol"},"Expand the cluster tree and select the workload")),(0,o.kt)("figure",{className:"img-frame"},(0,o.kt)("img",{className:"gif-img",src:(0,i.Z)("/img/intro/start-devmode.jpg")}),(0,o.kt)("figcaption",null,"Start DevMode in VS Code and JetBrains")),(0,o.kt)("h2",{id:"development-process"},"Development Process"),(0,o.kt)("h3",{id:"1-replace-image"},"1. Replace Image"),(0,o.kt)("p",null,"When starting DevMode, Nocalhost will first replace the remote container image with development image (DevImage)."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"../config/config-dev#configure-development-image"},"Read more to learn about DevImage configuration")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Image Pull")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Container image will handle by Kubernetes, ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/containers/images/"},"read more to learn about Kubernetes image management")))),(0,o.kt)("h3",{id:"2-replace-container-and-restart-pod"},"2. Replace Container and Restart POD"),(0,o.kt)("p",null,"In this stage, Nocalhost will: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Use the DevImage to start a new development container (DevContainer)"),(0,o.kt)("li",{parentName:"ol"},"Use the DevContainer to replace the original container"),(0,o.kt)("li",{parentName:"ol"},"Restart POD with the DevContainer")),(0,o.kt)("p",null,"When entering DevMode, you should see the following messages in the IDE output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Starting DevMode...\nNo previous syncthing process (10799) found\nDeployment ratings replicas is already 1, no need to scale\nMount workDir to emptyDir\nUpdating development container...\nPrevious replicaSet ratings-95c8f5cd4 has not been terminated, waiting revision 2 to be ready\nThis may take several minutes, depending on the load of your k8s cluster\nWaiting pod to start...\n\n \u2713  Dev container has been updated\n")),(0,o.kt)("h3",{id:"3-start-port-forwarding"},"3. Start Port-Forwarding"),(0,o.kt)("h4",{id:"configured-portforward-in-configyaml"},"Configured ",(0,o.kt)("inlineCode",{parentName:"h4"},"portForward")," in ",(0,o.kt)("inlineCode",{parentName:"h4"},"config.yaml")),(0,o.kt)("p",null,"Nocalhost iterates over every item the ",(0,o.kt)("inlineCode",{parentName:"p"},"containers[*].dev[*].portForward")," array defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"config.yaml")," and starts port-forwarding for each of the entries and the port mappings they define in the ",(0,o.kt)("inlineCode",{parentName:"p"},"portForward")," section."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Before starting the actual port-forwarding, Nocalhost waits until the containers and services are ready. You should see the following messages in IDE output."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Syncthing port-forward pod ratings-5dfbc89c59-r7wg5, namespace default\nPort-forward 51517:51517 has been started\n")))),(0,o.kt)("h4",{id:"without-portforward-configurations"},"Without ",(0,o.kt)("inlineCode",{parentName:"h4"},"portForward")," Configurations"),(0,o.kt)("h3",{id:"4-start-file-synchronization"},"4. Start File Synchronization"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ignoredPattern: \n.git\n.github\nnode_modules\nsyncedPattern: \n!/\n\n \u2713  File sync started\n dev start end\n\nsync file ...\n... ...\nSyncthing has been started\nsync file end\n")),(0,o.kt)("h3",{id:"5-open-terminal-and-stream-logs"},"5. Open Terminal and Stream Logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"root@ratings-5dfbc89c59-r7wg5:/home/nocalhost-dev#\n")))}m.isMDXComponent=!0}}]);